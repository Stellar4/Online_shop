{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport jwt_decode from \"jwt-decode\";\nexport const createType = async type => {\n  const {\n    data\n  } = await $authHost.post('api/type', type);\n  return data;\n};\nexport const fetchTypes = async () => {\n  const {\n    data\n  } = await $host.get('api/type');\n  return data;\n};\nexport const deleteType = async id => {\n  const {\n    data\n  } = await $authHost.delete('api/type/' + id);\n  return data;\n};\nexport const createBrand = async brand => {\n  const {\n    data\n  } = await $authHost.post('api/brand', brand);\n  return data;\n};\nexport const fetchBrands = async () => {\n  const {\n    data\n  } = await $host.get('api/brand');\n  return data;\n};\nexport const deleteBrand = async id => {\n  const {\n    data\n  } = await $authHost.delete('api/brand/' + id);\n  return data;\n};\nexport const createDevice = async device => {\n  const {\n    data\n  } = await $authHost.post('api/device', device);\n  return data;\n};\nexport const fetchDevices = async (typeId, brandId, page, limit = 5) => {\n  const {\n    data\n  } = await $host.get('api/device', {\n    params: {\n      typeId,\n      brandId,\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const fetchOneDevice = async id => {\n  const {\n    data\n  } = await $host.get('api/device/' + id);\n  return data;\n};\nexport const deleteDevice = async id => {\n  const {\n    data\n  } = await $authHost.delete('api/device/' + id);\n  return data;\n}; // ------ Добавляю подключение для добавление crud с корзиной ------- //\n\nexport const addtoBasket = async deviceId => {\n  const {\n    response\n  } = await $authHost.post('api/basket', deviceId);\n  return response;\n};\nexport const getBasket = async () => {\n  const {\n    data\n  } = await $authHost.get('api/basket');\n  return data;\n};","map":{"version":3,"sources":["D:/Program files/VisualCode projects/Online_shop-master/client/src/http/deviceAPI.js"],"names":["$authHost","$host","jwt_decode","createType","type","data","post","fetchTypes","get","deleteType","id","delete","createBrand","brand","fetchBrands","deleteBrand","createDevice","device","fetchDevices","typeId","brandId","page","limit","params","fetchOneDevice","deleteDevice","addtoBasket","deviceId","response","getBasket"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,KAAnB,QAA+B,SAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACtC,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAML,SAAS,CAACM,IAAV,CAAe,UAAf,EAA2BF,IAA3B,CAArB;AACA,SAAOC,IAAP;AACH,CAHM;AAKP,OAAO,MAAME,UAAU,GAAG,YAAY;AAClC,QAAM;AAACF,IAAAA;AAAD,MAAS,MAAMJ,KAAK,CAACO,GAAN,CAAU,UAAV,CAArB;AACA,SAAOH,IAAP;AACH,CAHM;AAKP,OAAO,MAAMI,UAAU,GAAG,MAAOC,EAAP,IAAc;AACpC,QAAM;AAACL,IAAAA;AAAD,MAAS,MAAML,SAAS,CAACW,MAAV,CAAiB,cAAcD,EAA/B,CAArB;AACA,SAAOL,IAAP;AACH,CAHM;AAMP,OAAO,MAAMO,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACxC,QAAM;AAACR,IAAAA;AAAD,MAAS,MAAML,SAAS,CAACM,IAAV,CAAe,WAAf,EAA4BO,KAA5B,CAArB;AACA,SAAOR,IAAP;AACH,CAHM;AAKP,OAAO,MAAMS,WAAW,GAAG,YAAY;AACnC,QAAM;AAACT,IAAAA;AAAD,MAAS,MAAMJ,KAAK,CAACO,GAAN,CAAU,WAAV,CAArB;AACA,SAAOH,IAAP;AACH,CAHM;AAKP,OAAO,MAAMU,WAAW,GAAG,MAAOL,EAAP,IAAc;AACrC,QAAM;AAACL,IAAAA;AAAD,MAAS,MAAML,SAAS,CAACW,MAAV,CAAiB,eAAeD,EAAhC,CAArB;AACA,SAAOL,IAAP;AACH,CAHM;AAMP,OAAO,MAAMW,YAAY,GAAG,MAAOC,MAAP,IAAkB;AAC1C,QAAM;AAACZ,IAAAA;AAAD,MAAS,MAAML,SAAS,CAACM,IAAV,CAAe,YAAf,EAA6BW,MAA7B,CAArB;AACA,SAAOZ,IAAP;AACH,CAHM;AAKP,OAAO,MAAMa,YAAY,GAAG,OAAOC,MAAP,EAAeC,OAAf,EAAwBC,IAAxB,EAA8BC,KAAK,GAAE,CAArC,KAA2C;AACnE,QAAM;AAACjB,IAAAA;AAAD,MAAS,MAAMJ,KAAK,CAACO,GAAN,CAAU,YAAV,EAAwB;AAACe,IAAAA,MAAM,EAAE;AAC9CJ,MAAAA,MAD8C;AACtCC,MAAAA,OADsC;AAC7BC,MAAAA,IAD6B;AACvBC,MAAAA;AADuB;AAAT,GAAxB,CAArB;AAGA,SAAOjB,IAAP;AACH,CALM;AAOP,OAAO,MAAMmB,cAAc,GAAG,MAAOd,EAAP,IAAc;AACxC,QAAM;AAACL,IAAAA;AAAD,MAAS,MAAMJ,KAAK,CAACO,GAAN,CAAU,gBAAgBE,EAA1B,CAArB;AACA,SAAOL,IAAP;AACH,CAHM;AAKP,OAAO,MAAMoB,YAAY,GAAG,MAAOf,EAAP,IAAc;AACtC,QAAM;AAACL,IAAAA;AAAD,MAAS,MAAML,SAAS,CAACW,MAAV,CAAiB,gBAAgBD,EAAjC,CAArB;AACA,SAAOL,IAAP;AACH,CAHM,C,CAMP;;AACA,OAAO,MAAMqB,WAAW,GAAG,MAAOC,QAAP,IAAoB;AAC3C,QAAM;AAACC,IAAAA;AAAD,MAAa,MAAM5B,SAAS,CAACM,IAAV,CAAe,YAAf,EAA6BqB,QAA7B,CAAzB;AACA,SAAOC,QAAP;AACH,CAHM;AAKP,OAAO,MAAMC,SAAS,GAAG,YAAY;AACjC,QAAM;AAACxB,IAAAA;AAAD,MAAS,MAAML,SAAS,CAACQ,GAAV,CAAc,YAAd,CAArB;AACA,SAAOH,IAAP;AACH,CAHM","sourcesContent":["import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const deleteType = async (id) => {\n    const {data} = await $authHost.delete('api/type/' + id);\n    return data\n}\n\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const deleteBrand = async (id) => {\n    const {data} = await $authHost.delete('api/brand/' + id)\n    return data\n}\n\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n\nexport const deleteDevice = async (id) => {\n    const {data} = await $authHost.delete('api/device/' + id)\n    return data\n}\n\n\n// ------ Добавляю подключение для добавление crud с корзиной ------- //\nexport const addtoBasket = async (deviceId) => {\n    const {response} = await $authHost.post('api/basket', deviceId)\n    return response\n}\n\nexport const getBasket = async () => {\n    const {data} = await $authHost.get('api/basket')\n    return data\n}"]},"metadata":{},"sourceType":"module"}